name: CI

on:
  pull_request:
    branches:
      - main

env:
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment:
      name: dev
    strategy:
      fail-fast: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache nextjs
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Build
        run: pnpm run ci
        env:
          KINDE_CLIENT_ID: ${{ secrets.KINDE_CLIENT_ID }}
          KINDE_CLIENT_SECRET: ${{ secrets.KINDE_CLIENT_SECRET }}
          KINDE_ISSUER_URL: ${{ vars.KINDE_ISSUER_URL }}
          KINDE_POST_LOGIN_REDIRECT_URL: ${{ vars.KINDE_POST_LOGIN_REDIRECT_URL }}
          KINDE_POST_LOGOUT_REDIRECT_URL: ${{ vars.KINDE_POST_LOGOUT_REDIRECT_URL }}
          KINDE_SITE_URL: ${{ vars.KINDE_SITE_URL }}

      - name: Lint
        run: pnpm run lint
